// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModelagemAPI.Data;

#nullable disable

namespace ModelagemAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250617194702_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ModelagemAPI.Models.Aluno", b =>
                {
                    b.Property<int>("idAluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idAluno"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("idAluno");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("ModelagemAPI.Models.Aviso", b =>
                {
                    b.Property<int>("idAviso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idAviso"));

                    b.Property<string>("codDisciplina")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("dataAEnviar")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("dataEnviado")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("idAluno")
                        .HasColumnType("int");

                    b.Property<int>("idProva")
                        .HasColumnType("int");

                    b.Property<int>("idTurma")
                        .HasColumnType("int");

                    b.Property<string>("mensagem")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("idAviso");

                    b.HasIndex("codDisciplina");

                    b.HasIndex("idAluno");

                    b.HasIndex("idProva");

                    b.HasIndex("idTurma");

                    b.ToTable("Aviso");
                });

            modelBuilder.Entity("ModelagemAPI.Models.Disciplina", b =>
                {
                    b.Property<string>("codDisciplina")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("codDisciplina");

                    b.ToTable("Disciplina");
                });

            modelBuilder.Entity("ModelagemAPI.Models.Entity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Entity");
                });

            modelBuilder.Entity("ModelagemAPI.Models.Prova", b =>
                {
                    b.Property<int>("idProva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idProva"));

                    b.Property<string>("codDisciplina")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("dataHora")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tipo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("idProva");

                    b.HasIndex("codDisciplina");

                    b.HasIndex("tipo");

                    b.ToTable("Prova");
                });

            modelBuilder.Entity("ModelagemAPI.Models.Sala", b =>
                {
                    b.Property<int>("idSala")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idSala"));

                    b.Property<string>("bloco")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("idSala");

                    b.ToTable("Sala");
                });

            modelBuilder.Entity("ModelagemAPI.Models.TipoProva", b =>
                {
                    b.Property<string>("tipo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("tipo");

                    b.ToTable("TipoProva");
                });

            modelBuilder.Entity("ModelagemAPI.Models.Turma", b =>
                {
                    b.Property<int>("idTurma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idTurma"));

                    b.Property<string>("codDisciplina")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("nomeTurma")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("idTurma");

                    b.HasIndex("codDisciplina");

                    b.ToTable("Turma");
                });

            modelBuilder.Entity("ModelagemAPI.Models.Aviso", b =>
                {
                    b.HasOne("ModelagemAPI.Models.Disciplina", "disciplina_fk")
                        .WithMany()
                        .HasForeignKey("codDisciplina")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ModelagemAPI.Models.Aluno", "aluno_fk")
                        .WithMany()
                        .HasForeignKey("idAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelagemAPI.Models.Prova", "prova_fk")
                        .WithMany()
                        .HasForeignKey("idProva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelagemAPI.Models.Turma", "turma_fk")
                        .WithMany()
                        .HasForeignKey("idTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("aluno_fk");

                    b.Navigation("disciplina_fk");

                    b.Navigation("prova_fk");

                    b.Navigation("turma_fk");
                });

            modelBuilder.Entity("ModelagemAPI.Models.Prova", b =>
                {
                    b.HasOne("ModelagemAPI.Models.Disciplina", "disciplina_fk")
                        .WithMany()
                        .HasForeignKey("codDisciplina")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ModelagemAPI.Models.TipoProva", "tipo_fk")
                        .WithMany()
                        .HasForeignKey("tipo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("disciplina_fk");

                    b.Navigation("tipo_fk");
                });

            modelBuilder.Entity("ModelagemAPI.Models.Turma", b =>
                {
                    b.HasOne("ModelagemAPI.Models.Disciplina", "disciplina_fk")
                        .WithMany()
                        .HasForeignKey("codDisciplina")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("disciplina_fk");
                });
#pragma warning restore 612, 618
        }
    }
}
